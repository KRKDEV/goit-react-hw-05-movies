{"version":3,"file":"static/js/20.8aca86ce.chunk.js","mappings":"kLACA,EAAyB,uB,SCEZA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,8ICjBD,EAAgC,+BAAhC,EAA+E,+B,SC4D/E,EAtDgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GADcC,EAAAA,EAAAA,MACGC,QAEjBC,EAAO,6CAAyCH,EAAzC,4BARF,mCAQE,mBA0Bb,OAxBAI,EAAAA,EAAAA,YAAU,WACRL,GAAa,GAEb,IAAMM,EAAU,mCAAG,sGACYC,MAAMH,GAChCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,qBAAsBF,EAAtC,IAHG,QACXG,EADW,SAKff,GAAa,IACPgB,GAFY,OAEED,EAAeC,UAC3BC,KAAI,SAAAC,GAAM,MAAK,CACrBjB,GAAIiB,EAAOjB,GACXkB,OAAQD,EAAOC,OACfC,QAASF,EAAOE,QAChBC,OAAQH,EAAOG,OAJC,IAMlBvB,EAAWkB,IAEXH,QAAQC,IAAI,wCAfG,2CAAH,qDAkBhBR,GACD,GAAE,CAACF,KAGF,4BACE,qCACA,gBAAIlB,UAAWC,EAAf,UACGY,IAAa,SAACd,EAAA,EAAD,IACbY,GAAWA,EAAQyB,OAClBzB,EAAQoB,KAAI,gBAAGhB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,gBAAalC,UAAWC,EAAxB,WACE,sCACU,0BAAOgC,QAEjB,uBAAIC,MAJGnB,EADC,KASZ,qEAKT,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"loader__icon\":\"Loader_loader__icon__cxe1A\"};","import { Grid } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css['loader']}>\n      <Grid\n        height=\"80\"\n        width=\"80\"\n        color=\"#f08080\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews__list\":\"Reviews_reviews__list__CxbB9\",\"reviews__item\":\"Reviews_reviews__item__PZiEf\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nconst API_KEY = `5576770c01d63e1242c2c0a47f8d9a02`;\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const queryParams = useParams();\n  const id = queryParams.movieId;\n\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getReviews = async () => {\n      const reviewsResults = await fetch(API_URL)\n        .then(response => response.json())\n        .catch(error => console.log('There was an error', error));\n      if (reviewsResults) {\n        setIsLoading(false);\n        const results = [...reviewsResults.results];\n        results.map(review => ({\n          id: review.id,\n          author: review.author,\n          content: review.content,\n          rating: review.rating,\n        }));\n        setReviews(results);\n      } else {\n        console.log('There was a problem with fetching...');\n      }\n    };\n    getReviews();\n  }, [API_URL]);\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      <ul className={css['reviews__list']}>\n        {isLoading && <Loader />}\n        {reviews && reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id} className={css['reviews__item']}>\n              <h3>\n                Author: <span>{author}</span>\n              </h3>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>There are no reviews for this movie.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["Loader","className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","useState","reviews","setReviews","isLoading","setIsLoading","id","useParams","movieId","API_URL","useEffect","getReviews","fetch","then","response","json","catch","error","console","log","reviewsResults","results","map","review","author","content","rating","length"],"sourceRoot":""}