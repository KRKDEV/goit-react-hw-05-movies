{"version":3,"file":"static/js/495.353c24eb.chunk.js","mappings":"mLACA,EAAyB,uB,SCEZA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,+ICjBD,EAAuB,mBAAvB,EAAsD,wB,SCmEtD,EA7Da,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GADcC,EAAAA,EAAAA,MACGC,QACjBC,EAAO,6CAAyCH,EAAzC,4BAPF,mCAOE,mBA0Bb,OAxBAI,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACb,IAAMM,EAAO,mCAAG,sGACYC,MAAMH,GAC7BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,qBAAsBF,EAAtC,IAHA,QACRG,EADQ,SAKZf,GAAa,IACPgB,GAFS,OAEKD,EAAYlB,OACxBoB,KAAI,SAAApB,GAAI,MAAK,CACnBI,GAAIJ,EAAKI,GACTiB,aAAcrB,EAAKqB,aACnBC,cAAetB,EAAKsB,cACpBC,KAAMvB,EAAKuB,KACXC,UAAWxB,EAAKwB,UALF,IAOhBvB,EAAQkB,IAERH,QAAQC,IAAI,wCAhBA,2CAAH,qDAmBbR,GACD,GAAE,CAACF,KAGF,2BACGL,IAAa,SAACd,EAAA,EAAD,KACd,kCACA,eAAIC,UAAWC,EAAf,SACGU,GAAQA,EAAKyB,QACZ,8BACGzB,EAAKoB,KACJ,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeE,EAApC,EAAoCA,UAApC,EAA+CE,WAA/C,OACE,gBAAarC,UAAWC,EAAxB,WACE,gBACEqC,IAAG,8CAAyCN,GAC5CO,IAAKN,KAEP,uBAAIA,KACJ,wBACE,0BAAOE,QAPFpB,EADX,OAeJ,sFAKT,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"loader__icon\":\"Loader_loader__icon__cxe1A\"};","import { Grid } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css['loader']}>\n      <Grid\n        height=\"80\"\n        width=\"80\"\n        color=\"#f08080\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__YOhg9\",\"cast-card\":\"Cast_cast-card__l8981\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst API_KEY = `5576770c01d63e1242c2c0a47f8d9a02`;\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const queryParams = useParams();\n  const id = queryParams.movieId;\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getCast = async () => {\n      const castResults = await fetch(API_URL)\n        .then(response => response.json())\n        .catch(error => console.log('There was an error', error));\n      if (castResults) {\n        setIsLoading(false);\n        const results = [...castResults.cast];\n        results.map(cast => ({\n          id: cast.id,\n          profile_path: cast.profile_path,\n          original_name: cast.original_name,\n          name: cast.name,\n          character: cast.character,\n        }));\n        setCast(results);\n      } else {\n        console.log('There was a problem with fetching...');\n      }\n    };\n    getCast();\n  }, [API_URL]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <h3>Cast</h3>\n      <ul className={css['cast']}>\n        {cast && cast.length ? (\n          <>\n            {cast.map(\n              ({ id, profile_path, original_name, character, popularity }) => (\n                <li key={id} className={css['cast-card']}>\n                  <img\n                    src={`https://www.themoviedb.org/t/p/w500/${profile_path}`}\n                    alt={original_name}\n                  />\n                  <p>{original_name}</p>\n                  <p>\n                    <span>{character}</span>\n                  </p>\n                </li>\n              )\n            )}\n          </>\n        ) : (\n          <p>We are sorry but cast is not available for this movie.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["Loader","className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","useState","cast","setCast","isLoading","setIsLoading","id","useParams","movieId","API_URL","useEffect","getCast","fetch","then","response","json","catch","error","console","log","castResults","results","map","profile_path","original_name","name","character","length","popularity","src","alt"],"sourceRoot":""}